Check if a given Binary Tree is a Heap
Given a binary tree, check if it has heap property or not, Binary tree needs to fulfill the following two conditions for being a heap – 

It should be a complete tree (i.e. all levels except the last should be full).
Every node’s value should be greater than or equal to its child node (considering max-heap).

isMaxHeap(Node node){
//3 Cases 

if(node == null){ //For null node
	return true;
}

if(node.left == null && node.right == null){ //For null node
	return true;
}

if(node.left != null && node.left.data > node.data){
	false;
}	

if(node.right != null && node.right.data > node.data){
	false;
}
return isHeap(node.left) && node.right;
}

boolean isCBT(Node node){
	Queue<Node> nodeQueue = new LinkedList();
	nodeQueue.add(node);
	boolean isLeftAbsent = false;
	while(!nodesQueue.isEmpy()){
		Node curNode = nodesQueue.poll();
		if(currNode == null){
			isLeftAbsent = true;
		} else {
			if(isLeftAbsent){
				return false;
			}
			nodesQueue.add(currNode.left);
			nodesQueue.add(currNode.right);
		}
	}
}


Node root = new Node(51);
root.left = new Node(48);
root.right = new Node(35);

root.left.right = new Node(25); 

root.right.left = new Node(20);
root.right.right = new Node(30);



Assignment :-

1. PreOrder, Inorder, PostOrder -> CBT -> 


Answer tried :- 

boolean checkCbt(TreeNode node)
{
	if(node==null) 
		return true;
	if(node.right==null && node.left!=null) 
		return true;
	if(node.left==null && node.right!=null) 
		return false;
	return checkCbt(node.left) && checkCbt(node.right);
}

https://leetcode.com/problems/find-median-from-data-stream/



how to handle stream data? we havn't used StreamAPI before 
get data from db and inside software playing with  catching data USING DATASTRUCTURE 
JSON and XML is the Medium to clock the Database and the Data we use in our Data Structure
